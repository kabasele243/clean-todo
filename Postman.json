{
	"info": {
		"name": "Serverless Todo API",
		"description": "Collection for testing the Serverless Todo API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Todo",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Complete Project\",\n    \"description\": \"Finish the serverless todo API implementation\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/todos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos"
					]
				},
				"description": "Create a new todo item"
			},
			"response": []
		},
		{
			"name": "Get Todo by ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/todos/{{todoId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos",
						"{{todoId}}"
					]
				},
				"description": "Retrieve a specific todo by ID"
			},
			"response": []
		},
		{
			"name": "List All Todos",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/todos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos"
					]
				},
				"description": "Get all todo items"
			},
			"response": []
		},
		{
			"name": "Update Todo",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Updated Todo Title\",\n    \"description\": \"Updated description for the todo item\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/todos/{{todoId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos",
						"{{todoId}}"
					]
				},
				"description": "Update an existing todo item"
			},
			"response": []
		},
		{
			"name": "Complete Todo",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/todos/{{todoId}}/complete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos",
						"{{todoId}}",
						"complete"
					]
				},
				"description": "Mark a todo item as completed"
			},
			"response": []
		},
		{
			"name": "Delete Todo",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/todos/{{todoId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos",
						"{{todoId}}"
					]
				},
				"description": "Delete a todo item"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://your-api-gateway-url.execute-api.us-east-1.amazonaws.com/dev",
			"type": "string",
			"description": "Base URL for the API (replace with your deployed API Gateway URL)"
		},
		{
			"key": "todoId",
			"value": "your-todo-id",
			"type": "string",
			"description": "ID of a todo item (replace with an actual todo ID)"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Create Todo Tests",
					"if (pm.info.requestName === \"Create Todo\") {",
					"    pm.test(\"Status code is 201\", function () {",
					"        pm.response.to.have.status(201);",
					"    });",
					"",
					"    pm.test(\"Response has todo data\", function () {",
					"        var jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('id');",
					"        pm.expect(jsonData).to.have.property('title');",
					"        pm.expect(jsonData).to.have.property('description');",
					"        pm.expect(jsonData.completed).to.equal(false);",
					"        ",
					"        // Save todo ID for other requests",
					"        pm.environment.set(\"todoId\", jsonData.id);",
					"    });",
					"}",
					"",
					"// Get Todo Tests",
					"if (pm.info.requestName === \"Get Todo by ID\") {",
					"    pm.test(\"Status code is 200\", function () {",
					"        pm.response.to.have.status(200);",
					"    });",
					"",
					"    pm.test(\"Response has correct todo data\", function () {",
					"        var jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('id');",
					"        pm.expect(jsonData.id).to.equal(pm.environment.get(\"todoId\"));",
					"    });",
					"}",
					"",
					"// List Todos Tests",
					"if (pm.info.requestName === \"List All Todos\") {",
					"    pm.test(\"Status code is 200\", function () {",
					"        pm.response.to.have.status(200);",
					"    });",
					"",
					"    pm.test(\"Response is an array\", function () {",
					"        var jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.be.an('array');",
					"    });",
					"}",
					"",
					"// Update Todo Tests",
					"if (pm.info.requestName === \"Update Todo\") {",
					"    pm.test(\"Status code is 200\", function () {",
					"        pm.response.to.have.status(200);",
					"    });",
					"",
					"    pm.test(\"Todo was updated\", function () {",
					"        var jsonData = pm.response.json();",
					"        pm.expect(jsonData.title).to.equal(\"Updated Todo Title\");",
					"    });",
					"}",
					"",
					"// Complete Todo Tests",
					"if (pm.info.requestName === \"Complete Todo\") {",
					"    pm.test(\"Status code is 200\", function () {",
					"        pm.response.to.have.status(200);",
					"    });",
					"",
					"    pm.test(\"Todo was marked as completed\", function () {",
					"        var jsonData = pm.response.json();",
					"        pm.expect(jsonData.completed).to.equal(true);",
					"    });",
					"}",
					"",
					"// Delete Todo Tests",
					"if (pm.info.requestName === \"Delete Todo\") {",
					"    pm.test(\"Status code is 204\", function () {",
					"        pm.response.to.have.status(204);",
					"    });",
					"}"
				]
			}
		}
	]
}